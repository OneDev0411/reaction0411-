############################################################
#  Builds a Meteor + Reaction + MongoDB Docker Image
#
#  Important:  Best to run from a clean directory that hasn't had meteor run in it.
#  Important:  packages/<pkg>/.npm and .build* should not exist
#
#  NOTE: this script has some reaction specific scripts,
#        you probably don't want to use this a generic dockerfile
#
#  Usage:
#   Build:
#     cd reaction
#     docker build -t <your org>/reaction .
#
#   Run Reaction, Meteor + local mongo:
#
#   docker run --rm  -p ::3000
#     -e ROOT_URL="http://localhost" \
#     -e REACTION_EMAIL="youradmin@yourdomain.com" \
#     -e REACTION_USER="admin" \
#     -e REACTION_AUTH="password" \
#     -t ongoworks/reaction
#
#
#   Optional Meteor parameters (-e):
#
#     ROOT_URL="< hostname>"
#     MONGO_URL="<your mongodb connect string>"
#     OPLOG_URL="<mongo oplog url>"
#     PORT="<meteor port>"
#     METEOR_SETTINGS="{json}"
#     DISABLE_WEBSOCKETS="1"
#
#   Reaction Specific parameter (-e):
#
#     MAIL_URL="<smtp connection string>"
#     REACTION_EMAIL="youradmin@yourdomain.com"
#     REACTION_USER="admin"
#     REACTION_AUTH="password"
#
##############################################################

FROM debian:jessie
MAINTAINER Aaron Judd <hello@reactioncommerce.com>

# Install git, curl, python, etc
# Install imagemagick (optional for cfs:graphicsmagick)
RUN apt-get -qq update && apt-get install -qq -y \
  build-essential \
  apt-utils \
  ca-certificates \
  chrpath \
  curl \
  gcc \
  git-all \
  graphicsmagick \
  libfreetype6 \
  libfreetype6-dev \
  libssl-dev \
  libfontconfig1 \
  make \
  procps \
  python \
  xz-utils


# install node from package nodesource
RUN apt-get -qq upgrade
RUN curl -sL https://deb.nodesource.com/setup_0.10 | bash -
RUN apt-get install -y nodejs

# Install nodemon & phantomjs
RUN npm install --silent -g phantomjs nodemon

# Install Meteor
RUN curl -sL https://install.meteor.com | sed s/--progress-bar/-sL/g | /bin/sh

# Default env variables
ENV PORT 80
ENV ROOT_URL http://localhost
ENV MONGO_URL mongodb://127.0.0.1:27017/meteor
ENV NODE nodemon
ENV PACKAGE_DIRS "packages"
ENV DEBIAN_FRONTEND noninteractive

# 80 is the default meteor production port, while 3000 is development mode
EXPOSE 80

# Install entrypoint and build scripts
COPY bin/clone-packages.sh /usr/bin/clone-packages.sh
COPY bin/docker /usr/bin
RUN chmod +x \
/usr/bin/install-mongodb.sh \
/usr/bin/build-meteor.sh \
/usr/bin/build-packages.sh \
/usr/bin/cleanup.sh \
/usr/bin/entrypoint.sh \
/usr/bin/clone-packages.sh

# Install mongodb
RUN bash /usr/bin/install-mongodb.sh
RUN mkdir -p "/data/db"
VOLUME /data/db

# add app to /usr/src
RUN mkdir -p "/var/src" "/var/www"
COPY . /var/src/
WORKDIR /var/src/

# build meteor
RUN bash /usr/bin/clone-packages.sh
RUN bash /usr/bin/build-meteor.sh

# cleanup
RUN apt-get autoremove -y
RUN npm cache clear
RUN bash /usr/bin/cleanup.sh

# switch to production meteor bundle
WORKDIR /var/www/bundle

# start mongo and reaction
ENTRYPOINT ["/usr/bin/entrypoint.sh"]
CMD []
