####
# Custom data types for FlatRateFulfillmentRestriction data
####
type attributeRestrictions {
  property: String
  value: String
  propertyType: String
  operator: String
}

type destinationRestrictions {
  country: [String]
  region: [String]
  postal: [String]
}

enum restrictionTypeEnum {
  allow
  deny
}

enum FlatRateFulfillmentRestrictionSortByField {
  createdAt
}

input attributeRestrictionsInput {
  property: String
  value: String
  propertyType: String
  operator: String
}

input destinationRestrictionsInput {
  country: [String]
  region: [String]
  postal: [String]
}


####
# Queries
####
extend type Query {
  "Get the full list of flat rate fulfillment method restrictions."
  getFlatRateFulfillmentRestrictions(
    shopId: ID!
    after: ConnectionCursor,
    before: ConnectionCursor,
    first: ConnectionLimitInt,
    last: ConnectionLimitInt,
    sortOrder: SortOrder = desc,
    sortBy: FlatRateFulfillmentRestrictionSortByField = createdAt
  ): FlatRateFulfillmentRestrictionConnection!

  getFlatRateFulfillmentRestriction(
    shopId: ID!
    restrictionId: ID!
    after: ConnectionCursor,
    before: ConnectionCursor,
    first: ConnectionLimitInt,
    last: ConnectionLimitInt,
    sortOrder: SortOrder = desc,
    sortBy: FlatRateFulfillmentRestrictionSortByField = createdAt
  ): FlatRateFulfillmentRestrictionConnection!
}

type FlatRateFulfillmentRestrictionConnection {
  edges: [FlatRateFulfillmentRestrictionEdge]
  nodes: [FlatRateFulfillmentRestriction]
  pageInfo: PageInfo!
  totalCount: Int!
}

type FlatRateFulfillmentRestrictionEdge {
  cursor: ConnectionCursor!
  node: FlatRateFulfillmentRestriction
}

"Defines a restriction for a single flat rate fulfillment method, or universally all flat rate fulfillment methods."
type FlatRateFulfillmentRestriction implements Node {
  "The restriction ID."
  _id: ID!

  "The shop ID"
  shopId: ID!

  "Method IDs to apply this restriction to."
  methodIds: [String]

  """
  The type of this restriction. Allowed types are "allow" or "deny".
  """
  type: restrictionTypeEnum!

  "Attribute restrictions."
  attributes: [attributeRestrictions]

  "Destination restrictions."
  destination: destinationRestrictions
}


####
# Create restriction mutation
####
extend type Mutation {
  "Create a flat rate fulfillment restriction"
  createFlatRateFulfillmentRestriction(input: CreateFlatRateFulfillmentRestrictionInput!): CreateFlatRateFulfillmentRestrictionPayload!
}

# Inputs
"Defines a fulfillment method that has a fixed price. This type is provided by the `flat-rate` fulfillment plugin."
input FlatRateFulfillmentRestrictionInput {
  "Method IDs to apply this restriction to."
  methodIds: [String]

  """
  The type of this restriction. Allowed types are "allow" or "deny".
  """
  type: restrictionTypeEnum!

  "Attribute restrictions."
  attributes: [attributeRestrictionsInput]

  "Destination restrictions."
  destination: destinationRestrictionsInput
}

"Input for the `CreateFlatRateFulfillmentRestriction` mutation"
input CreateFlatRateFulfillmentRestrictionInput {
  "An optional string identifying the mutation call, which will be returned in the response payload"
  clientMutationId: String

  "This defines the flat rate fulfillment restriction that you want to create"
  restriction: FlatRateFulfillmentRestrictionInput!

  "The shop to create this flat rate fulfillment restriction for"
  shopId: ID!
}


# Payloads
"Response from the `CreateFlatRateFulfillmentRestriction` mutation"
type CreateFlatRateFulfillmentRestrictionPayload {
  "The same string you sent with the mutation params, for matching mutation calls with their responses"
  clientMutationId: String

  "The created fulfillment method"
  restriction: FlatRateFulfillmentRestriction!
}


####
# Delete restriction mutation
####
extend type Mutation {
  "Delete a flat rate fulfillment restriction"
  deleteFlatRateFulfillmentRestriction(input: DeleteFlatRateFulfillmentRestrictionInput!): DeleteFlatRateFulfillmentRestrictionPayload!
}

# Inputs
"Input for the `deleteFlatRateFulfillmentRestriction` mutation"
input DeleteFlatRateFulfillmentRestrictionInput {
  "An optional string identifying the mutation call, which will be returned in the response payload"
  clientMutationId: String

  "The ID of the flat rate fulfillment method you want to delete"
  restrictionId: ID!

  "The shop that owns the method"
  shopId: ID!
}

# Payloads
"Response from the `deleteFlatRateFulfillmentRestriction` mutation"
type DeleteFlatRateFulfillmentRestrictionPayload {
  "The same string you sent with the mutation params, for matching mutation calls with their responses"
  clientMutationId: String

  "The removed fulfillment method"
  restriction: FlatRateFulfillmentRestriction!
}


####
# Update restriction mutation
####
extend type Mutation {
  "Update a flat rate fulfillment restriction"
  updateFlatRateFulfillmentRestriction(input: UpdateFlatRateFulfillmentRestrictionInput!): UpdateFlatRateFulfillmentRestrictionPayload!
}

# Inputs
"Input for the `updateFlatRateFulfillmentRestriction` mutation"
input UpdateFlatRateFulfillmentRestrictionInput {
  "An optional string identifying the mutation call, which will be returned in the response payload"
  clientMutationId: String

  "The ID of the flat rate fulfillment restriction you want to update"
  restrictionId: ID!

  "The updated restriction. Pass the whole updated restriction object without the ID."
  restriction: FlatRateFulfillmentRestrictionInput!

  "The shop that owns the method"
  shopId: ID!
}

# Payloads
"Response from the `updateFlatRateFulfillmentMethod` mutation"
type UpdateFlatRateFulfillmentRestrictionPayload {
  "The same string you sent with the mutation params, for matching mutation calls with their responses"
  clientMutationId: String

  "The updated fulfillment restriction"
  restriction: FlatRateFulfillmentRestriction!
}
