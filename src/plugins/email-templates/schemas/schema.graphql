"Represents a Template"
type Template implements Node {
  "The shop ID"
  _id: ID!

  "Email template language"
  language: String

  "Email template name"
  name: String

  "The shop that owns the template"
  shopId: ID!

  "Email template string"
  subject: String

  "Email template body or html text"
  template: String

  "Email template title"
  title: String
}

"A connection edge in which each node is a `Template` object"
type TemplateEdge {
  "The cursor that represents this node in the paginated results"
  cursor: ConnectionCursor!

  "The email template"
  node: Template
}

"""
Wraps a list of Templates, providing pagination cursors and information.

For information about what Relay-compatible connections are and how to use them, see the following articles:
- [Relay Connection Documentation](https://facebook.github.io/relay/docs/en/graphql-server-specification.html#connections)
- [Relay Connection Specification](https://facebook.github.io/relay/graphql/connections.htm)
- [Using Relay-style Connections With Apollo Client](https://www.apollographql.com/docs/react/recipes/pagination.html)
"""
type TemplateConnection {
  "The list of nodes that match the query, wrapped in an edge to provide a cursor string for each"
  edges: [TemplateEdge]

  """
  You can request the `nodes` directly to avoid the extra wrapping that `NodeEdge` has,
  if you know you will not need to paginate the results.
  """
  nodes: [Template]

  "Information to help a client request the next or previous page"
  pageInfo: PageInfo!

  "The total number of nodes that match your query"
  totalCount: Int!
}

extend type Query {
  "Retrieves a list of email templates"
  emailTemplates(
    "The shopId to which email templates belong to"
    shopId: ID!

    "Return only results that come after this cursor. Use this with `first` to specify the number of results to return."
    after: ConnectionCursor,

    "Return only results that come before this cursor. Use this with `last` to specify the number of results to return."
    before: ConnectionCursor,

    "Return at most this many results. This parameter may be used with either `after` or `offset` parameters."
    first: ConnectionLimitInt,

    "Return at most this many results. This parameter may be used with the `before` parameter."
    last: ConnectionLimitInt,

    "Return only results that come after the Nth result. This parameter may be used with the `first` parameter."
    offset: Int,
  ) : TemplateConnection
}
