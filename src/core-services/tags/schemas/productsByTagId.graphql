"A tag product"
type TagProduct {
  "The product id"
  _id: ID!

  "The date and time at which this CatalogProduct was created, which is when the related product was first published"
  createdAt: DateTime!

  "Position of the product"
  position: Int

  "The title of the product"
  title: String
}

"A connection edge in which each node is a `TagProduct` object"
type TagProductEdge {
  "The cursor that represents this node in the paginated results"
  cursor: ConnectionCursor!

  "The tag product"
  node: TagProduct
}

"""
Wraps a list of `TagProduct`s, providing pagination cursors and information.

For information about what Relay-compatible connections are and how to use them, see the following articles:
- [Relay Connection Documentation](https://facebook.github.io/relay/docs/en/graphql-server-specification.html#connections)
- [Relay Connection Specification](https://facebook.github.io/relay/graphql/connections.htm)
- [Using Relay-style Connections With Apollo Client](https://www.apollographql.com/docs/react/recipes/pagination.html)
"""
type TagProductConnection {
  "The list of nodes that match the query, wrapped in an edge to provide a cursor string for each"
  edges: [TagProductEdge]

  """
  You can request the `nodes` directly to avoid the extra wrapping that `NodeEdge` has,
  if you know you will not need to paginate the results.
  """
  nodes: [TagProduct]

  "Information to help a client request the next or previous page"
  pageInfo: PageInfo!

  "The total number of nodes that match your query"
  totalCount: Int!
}

extend type Query {
  "Returns a list of product in a tag"
  productsByTagId(
    "Shop that owns the tag"
    shopId: ID!,

    "The tag ID"
    tagId: ID!,

    "Return only results that come after this cursor. Use this with `first` to specify the number of results to return."
    after: ConnectionCursor,

    "Return only results that come before this cursor. Use this with `last` to specify the number of results to return."
    before: ConnectionCursor,

    "Return at most this many results. This parameter may be used with either `after` or `offset` parameters."
    first: ConnectionLimitInt,

    "Return at most this many results. This parameter may be used with the `before` parameter."
    last: ConnectionLimitInt
  ): TagProductConnection!
}
