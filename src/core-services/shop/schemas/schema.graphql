"URLs for various shop assets in various sizes"
type ShopBrandAssets {
  "URLs for the navigation bar brand logo image"
  navbarBrandImage: ImageSizes

  "Internal navigation bar brand logo image ID"
  navbarBrandImageId: String
}

"Shop logo URLs"
type ShopLogoUrls {
  "The primary logo URL for this shop. Setting this overrides any uploaded logo."
  primaryShopLogoUrl: String
}

"Storefront route URLs"
type StorefrontUrls {
  "Storefront Account Profile URL (can include `:accountId` in string)"
  storefrontAccountProfileUrl: String

  "Storefront Home URL"
  storefrontHomeUrl: String

  "Storefront login URL"
  storefrontLoginUrl: String

  "Storefront single order URL (can include `:orderReferenceId` and `:orderToken` in string)"
  storefrontOrderUrl: String

  "Storefront orders URL (can include `:accountId` in string)"
  storefrontOrdersUrl: String
}

"Parcel size"
type ShopParcelSize {
  "Parcel height"
  height: Float!

  "Parcel length"
  length: Float!

  "Parcel weight"
  weight: Float!

  "Parcel width"
  width: Float!
}

"Represents a Reaction shop"
type Shop implements Node {
  "The shop ID"
  _id: ID!

  "An the shop's default address"
  addressBook: [Address]

  "Whether to allow user to checkout without creating an account"
  allowGuestCheckout: Boolean

  "URLs for various shop assets in various sizes"
  brandAssets: ShopBrandAssets

  "The default shop currency"
  currency: Currency!

  "The default navigation tree for this shop"
  defaultNavigationTree(
    "Navigation tree language"
    language: String!,

    "Whether to include secondary navigation items"
    shouldIncludeSecondary: Boolean = false
  ): NavigationTree

  "The ID of the shop's default navigation tree"
  defaultNavigationTreeId: String

  "Default parcel size for this shop"
  defaultParcelSize: ShopParcelSize

  "Shop description"
  description: String

  "The shop's default email record"
  emails: [EmailRecord]

  "Shop's keywords"
  keywords: String

  "Shop default language"
  language: String!

  "Shop name"
  name: String!

  "Returns URLs for shop logos"
  shopLogoUrls: ShopLogoUrls

  "Shop's slug"
  slug: String

  "Returns URLs for various storefront routes"
  storefrontUrls: StorefrontUrls

  "Shop default timezone"
  timezone: String!
}

extend type Query {
  "Returns the primary shop for the domain"
  primaryShop: Shop

  "Returns the ID of the primary shop for the domain"
  primaryShopId: ID

  "Returns a shop by ID"
  shop(
    "The shop ID"
    id: ID!
  ): Shop

  "Returns a shop by slug"
  shopBySlug(
    "The shop slug"
    slug: String!
  ): Shop
}
