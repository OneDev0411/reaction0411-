# This CircleCI configuration uses workflows to fan-out to multiple jobs.  The
# workflow is Dockerized. The first job builds the Docker image which is used
# in all future steps.
#
#  Assumes that the Docker image is published to Docker Hub.


version: 2

# The following stanza defines a map named defaults with a variable that may be
# inserted using the YAML merge (<<: *) key later in the file to save some
# typing. See http://yaml.org/type/merge.html for details.
defaults: &defaults
  environment:
    - DOCKER_REPOSITORY: "reactioncommerce/reaction"
    - DOCKER_NAMESPACE: "reactioncommerce"
    - DOCKER_NAME: "reaction"
    - TOOL_NODE_FLAGS: "--max-old-space-size=4096"
  working_directory: ~/reaction-app
  docker:
    - image: circleci/node:8-stretch

jobs:
  docker-test-build:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: docker-cache
      - run:
          name: Build Meteor-Dev Stage
          command: |
            docker build --target meteor-dev \
              -t "$DOCKER_REPOSITORY:$CIRCLE_SHA1-dev" .
            mkdir -p docker-cache
            docker save \
              -o docker-cache/docker-dev-image.tar \
              "$DOCKER_REPOSITORY:$CIRCLE_SHA1-dev"
      - persist_to_workspace:
          root: docker-cache
          paths:
            - docker-dev-image.tar

  docker-build:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: docker-cache
      - run:
          name: Discover Docker Tags
          command: |
            mkdir -p docker-cache
            .circleci/bin/docker-tags "$CIRCLE_SHA1" "$CIRCLE_BRANCH" | sed 's/\//-/g' \
              > docker-cache/docker-tags.txt
      - run:
          name: Docker build
          command: |
            docker build \
              --build-arg TOOL_NODE_FLAGS="--max-old-space-size=4096" \
              -t "$DOCKER_REPOSITORY:$CIRCLE_SHA1" .
            mkdir -p docker-cache
            docker save \
              -o docker-cache/docker-image.tar \
              "$DOCKER_REPOSITORY:$CIRCLE_SHA1"
          no_output_timeout: 30m
      - persist_to_workspace:
          root: docker-cache
          paths:
            - docker-image.tar
            - docker-tags.txt

  docker-push:
    <<: *defaults
    steps:
      - setup_remote_docker
      - attach_workspace:
          at: docker-cache
      - run:
          name: Load Docker Image
          command: |
            docker load < docker-cache/docker-image.tar
      - run:
          name: Tag Docker Image
          command: |
            cat docker-cache/docker-tags.txt \
              | xargs -t -I % \
                docker tag \
                  "$DOCKER_REPOSITORY:$CIRCLE_SHA1" \
                  "$DOCKER_REPOSITORY:%"
      - run:
          name: Docker Push
          command: |
            docker login -u "$DOCKER_USER" -p "$DOCKER_PASS"
            docker push "$DOCKER_REPOSITORY:$CIRCLE_SHA1"
            cat docker-cache/docker-tags.txt \
              | xargs -t -I % \
                docker push "$DOCKER_REPOSITORY:%"

  deploy-docs:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Build JSDoc files
          command: .reaction/jsdoc/build.sh
      - run:
          name: Deploy Doc files to S3 if on Master
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              if [[ "${API_DOC_BUCKET}" && "${API_DOC_BUCKET_REGION}" ]]; then
                aws s3 sync /tmp/reaction-docs ${API_DOC_BUCKET} --delete --region ${API_DOC_BUCKET_REGION}
              else
                echo "S3 bucket configuration not found for jsdocs"
                echo "Set API_DOC_BUCKET and API_DOC_BUCKET_REGION to build and deploy jsdocs to S3"
              fi
            else
              echo "Not master branch so not deploying"
            fi

  eslint:
    <<: *defaults
    steps:
      - setup_remote_docker
      - attach_workspace:
          at: docker-cache
      - run:
          name: Load Test Docker Image
          command: |
            docker load < docker-cache/docker-dev-image.tar
      - run:
          name: Run tests
          command: |
            docker run -i \
              "$DOCKER_REPOSITORY:$CIRCLE_SHA1-dev" \
              npm run lint

  test:
    <<: *defaults
    steps:
      - setup_remote_docker
      - attach_workspace:
          at: docker-cache
      - run:
          name: Load Test Docker Image
          command: |
            docker load < docker-cache/docker-dev-image.tar
      - run:
          name: Run tests
          command: |
            docker run -i \
              "$DOCKER_REPOSITORY:$CIRCLE_SHA1-dev" \
              reaction test

workflows:
  version: 2
  build_and_test:
    jobs:
      - docker-test-build
      - test:
          context: reaction-validation
          requires:
            - docker-test-build
      - eslint:
          requires:
            - docker-test-build
      - docker-build:
          context: reaction-build-read
      - docker-push:
          context: reaction-publish-docker
          requires:
            - docker-build
      - deploy-docs:
          context: reaction-build-read
          requires:
            - test
            - docker-build
